#!/bin/bash
# shellcheck disable=SC2063,SC2129,SC2181,SC2162

# colors
yellow="\033[33m"
green="\033[32m"
normal="\033[0m"
bold="\033[1m"

# defaults
INSTPATH="$HOME/bin"
REPONAME="git-nextflow"
REPOURL="https://github.com/LeaveAirykson/git-nextflow"
BRANCH=${2:-"master"}
NVERSION="4.7.0"

DEF_MAIN=$(git config --get nextflow.branch.main || echo "master")
DEF_NEXT=$(git config --get nextflow.branch.next || echo "develop")
DEF_FEATURE=$(git config --get nextflow.prefix.feature || echo "feature/")
DEF_HOTFIX=$(git config --get nextflow.prefix.hotfix || echo "hotfix/")
DEF_RELEASE=$(git config --get nextflow.prefix.release || echo "release/")
DEF_VERSION=$(git config --get nextflow.prefix.version || echo "v")
DEF_STRATEGY=$(git config --get nextflow.general.strategy || echo "default")
DEF_COMPAREURL=$(git config --get nextflow.general.compareurl)
DEF_COMMITURL=$(git config --get nextflow.general.commiturl)
DEF_TICKETURL=$(git config --get nextflow.general.ticketurl)
DEF_TICKETPATTERN=$(git config --get nextflow.prefix.ticket)

SET_MAIN="$DEF_MAIN"
SET_NEXT="$DEF_NEXT"
SET_FEATURE="$DEF_FEATURE"
SET_HOTFIX="$DEF_HOTFIX"
SET_RELEASE="$DEF_RELEASE"
SET_VERSION="$DEF_VERSION"
SET_STRATEGY="$DEF_STRATEGY"

setup() {
    echo -e "\n${bold}General${normal}"
    # ask user for settings
    read -ep "Name of main branch($SET_MAIN): " USEMAIN
    SET_MAIN=${USEMAIN:-"$SET_MAIN"}

    read -ep "Name of next branch($SET_NEXT): " USENEXT
    SET_NEXT=${USENEXT:-"$SET_NEXT"}

    read -ep "Prefix for feature branch($SET_FEATURE): " USEFEATURE
    SET_FEATURE=${USEFEATURE:-"$SET_FEATURE"}

    read -ep "Prefix for hotfix branch($SET_HOTFIX): " USEHOTFIX
    SET_HOTFIX=${USEHOTFIX:-"$SET_HOTFIX"}

    read -ep "Prefix for release branch($SET_RELEASE): " USERELEASE
    SET_RELEASE=${USERELEASE:-"$SET_RELEASE"}

    read -ep "Prefix for version tag($SET_VERSION): " USEVERSION
    SET_VERSION=${USEVERSION:-"$SET_VERSION"}

    echo "Release creation strategy - 'default' or 'alternate'"
    read -ep "Strategy: ($SET_STRATEGY): " USESTRATEGY
    SET_STRATEGY=${USESTRATEGY:-"$SET_STRATEGY"}

    # next settings are optional and only for 'alternate' strategy
    if [ "$SET_STRATEGY" != "alternate" ]; then
        setgitconfigs
        exit 0
    fi

    echo -e "\n${bold}Release compare url${normal}"
    echo "When set, the headline of the release inside the CHANGELOG.md will be linked to a comparison url."
    echo "Placeholders:"
    echo "{new} - the new release tag"
    echo "{old} - the previous release tag"
    echo "Example: https://bitbucket.org/myspace/myrepo/branches/compare/{new}%0D{old}#diff"
    echo ""
    read -ep "Release compare url:" USECOMPAREURL

    echo -e "\n${bold}Commit url${normal}"
    echo "When set, nextflow will set links on commit hashes in CHANGELOG.md."
    echo "Placeholders:"
    echo "{commit} - the commit hash"
    echo "Example: https://bitbucket.org/myspace/myrepo/commits/{commit}"
    echo ""
    read -ep "Commit url:" USECOMMITURL

    echo -e "\n${bold}Ticket url${normal}"
    echo "When set, nextflow will set links on ticket names in CHANGELOG.md."
    echo "Placeholders:"
    echo "{ticket} - the ticket key"
    echo "Example: https://myticketprovider.com/browse/{ticket}"
    echo ""
    read -ep "Ticket url:" USETICKETURL

    if [ -n "$USETICKETURL" ]; then
        echo -e "\n${bold}Ticket pattern${normal}"
        echo "pattern for ticket extractions from commit messages."
        echo "Example: RAL-"
        echo ""
        read -ep "Ticket syntax:" USETICKETPATTERN
    fi

    # set git configs
    setgitconfigs
}

setgitconfigs() {
    git config nextflow.branch.main "$SET_MAIN"
    git config nextflow.branch.next "$SET_NEXT"
    git config nextflow.prefix.feature "$SET_FEATURE"
    git config nextflow.prefix.hotfix "$SET_HOTFIX"
    git config nextflow.prefix.release "$SET_RELEASE"
    git config nextflow.prefix.version "$SET_VERSION"
    git config nextflow.general.strategy "$SET_STRATEGY"

    if [[ -n "$USECOMPAREURL" ]]; then
        git config nextflow.general.compareurl "$USECOMPAREURL"
    fi

    if [[ -n "$USECOMMITURL" ]]; then
        git config nextflow.general.commiturl "$USECOMMITURL"
    fi

    if [[ -n "$USETICKETURL" ]]; then
        git config nextflow.general.ticketurl "$USETICKETURL"
    fi

    if [[ -n "$USETICKETPATTERN" ]]; then
        git config nextflow.prefix.ticket "$USETICKETPATTERN"
    fi

    echo -e "\n⮕ ${green}Successfully setup git config!${normal}"
}

# handle install
case "$1" in

uninstall)
    echo -e "⮕ ${yellow}Uninstalling git nextflow commands${normal}"
    rm -vf "$INSTPATH/{git-feature,git-hotfix,git-release,git-nextflow}"
    ;;

version | --v | -v | --version)
    echo "$NVERSION"
    ;;

setup)
    setup
    ;;

config)
    git config -l | grep '^nextflow.'
    echo -e "\n${yellow}Notice:${normal} Settings are aggregated from global and local gitconfig."
    ;;

install | update)
    # greet
    echo -e "\n⮕ ${yellow}Installing git nextflow commands${normal}"

    # make sure tmp repo does not exist
    if [ -d "/tmp/$REPONAME" ]; then
        rm -rf "/tmp/$REPONAME"
    fi

    # clone repo into tmp folder
    git clone "$REPOURL" --branch "$BRANCH" --single-branch "/tmp/$REPONAME"

    # install commands from repo
    for cmd in "/tmp/$REPONAME/commands/"*; do
        install -v -m 0644 "$cmd" "$INSTPATH"
        chmod +x "$INSTPATH/$(basename $cmd)"
    done

    # remove tmp repo
    rm -rf "/tmp/$REPONAME"

    echo -e "⮕ ${green}Successfully installed git nextflow.${normal}"
    ;;
esac
